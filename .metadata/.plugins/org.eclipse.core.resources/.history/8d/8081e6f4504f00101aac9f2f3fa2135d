#include "ros/ros.h"

#include "ssl_msgs/TeamCommand.h"

#include "ssl_msgs/GameState.h"
#include "ssl_msgs/GlobalState.h"
#include "ssl_msgs/LocalState.h"

//void chatterCallback(const ssl_msgs::GameState & msg)
//{
////  ROS_INFO("I heard: [%s]", msg->data.c_str());
//}
//
//void chatterCallback3(const ssl_msgs::LocalState& msg)
//{
//// ROS_INFO("I heard: [%s]", msg->data.c_str());
//}


int main(int argc, char **argv)
{
	ros::init(argc, argv, "ssl_game_planner");
	ros::NodeHandle n;
	SSLGamePlanner* game_planner = new SSLGamePlanner(n);
	game_planner->Spin();

//	ros::Subscriber sub = n.subscribe("game_state", 1000, chatterCallback);
//	ros::Subscriber sub3 = n.subscribe("local_state", 1000, chatterCallback3);

//	ros::Rate loop_rate(10);

	return 0;
}
